// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="jsx-781207911 storybook-button storybook-button--large storybook-button--secondary"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="jsx-781207911 storybook-button storybook-button--medium storybook-button--primary"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="jsx-781207911 storybook-button storybook-button--medium storybook-button--secondary"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="jsx-781207911 storybook-button storybook-button--small storybook-button--secondary"
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="storybook-header"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <span
        className="welcome"
      >
        Welcome, 
        <b>
          Jane Doe
        </b>
        !
      </span>
      <button
        className="jsx-781207911 storybook-button storybook-button--small storybook-button--secondary"
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="storybook-header"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="jsx-781207911 storybook-button storybook-button--small storybook-button--secondary"
        type="button"
      >
        Log in
      </button>
      <button
        className="jsx-781207911 storybook-button storybook-button--small storybook-button--primary"
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/LoginForm Empty Form 1`] = `
<div
  className="w-full flex items-center justify-center"
>
  <div
    className="bg-white shadow-md rounded w-1/3"
  >
    <div
      className="px-4 py-3 bg-blue-500"
    >
      <h3
        className="text-lg font-semibold"
      >
        Login
      </h3>
    </div>
    <div
      className="modal-body p-4"
    >
      <form>
        <div
          className="mb-4"
        >
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="user_name"
          >
            UserName:
          </label>
          <input
            className="block w-full p-2 border-2 border-blue-500 rounded"
            id="user_name"
            placeholder="Enter your username"
            type="text"
          />
        </div>
        <div
          className="mb-4"
        >
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="password"
          >
            Password:
          </label>
          <input
            className="block w-full p-2 border-2 border-blue-500 rounded"
            id="password"
            placeholder="Enter your password"
            type="password"
          />
        </div>
        <div
          className="flex justify-end"
        >
          <button
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            id="submit"
            onClick={[Function]}
          >
            Submit
          </button>
        </div>
      </form>
    </div>
  </div>
</div>
`;

exports[`Storyshots Example/LoginForm Filled Form 1`] = `
<div
  className="w-full flex items-center justify-center"
>
  <div
    className="bg-white shadow-md rounded w-1/3"
  >
    <div
      className="px-4 py-3 bg-blue-500"
    >
      <h3
        className="text-lg font-semibold"
      >
        Login
      </h3>
    </div>
    <div
      className="modal-body p-4"
    >
      <form>
        <div
          className="mb-4"
        >
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="user_name"
          >
            UserName:
          </label>
          <input
            className="block w-full p-2 border-2 border-blue-500 rounded"
            id="user_name"
            placeholder="Enter your username"
            type="text"
          />
        </div>
        <div
          className="mb-4"
        >
          <label
            className="block text-gray-700 text-sm font-bold mb-2"
            htmlFor="password"
          >
            Password:
          </label>
          <input
            className="block w-full p-2 border-2 border-blue-500 rounded"
            id="password"
            placeholder="Enter your password"
            type="password"
          />
        </div>
        <div
          className="flex justify-end"
        >
          <button
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            id="submit"
            onClick={[Function]}
          >
            Submit
          </button>
        </div>
      </form>
    </div>
  </div>
</div>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="storybook-header"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="jsx-781207911 storybook-button storybook-button--small storybook-button--secondary"
          onClick={[Function]}
          type="button"
        >
          Log in
        </button>
        <button
          className="jsx-781207911 storybook-button storybook-button--small storybook-button--primary"
          onClick={[Function]}
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section
    className="storybook-page"
  >
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the ”args” of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://storybook.js.org/tutorials/"
        rel="noopener noreferrer"
        target="_blank"
      >
        Storybook tutorials
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="storybook-header"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="jsx-781207911 storybook-button storybook-button--small storybook-button--secondary"
          onClick={[Function]}
          type="button"
        >
          Log in
        </button>
        <button
          className="jsx-781207911 storybook-button storybook-button--small storybook-button--primary"
          onClick={[Function]}
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section
    className="storybook-page"
  >
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the ”args” of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://storybook.js.org/tutorials/"
        rel="noopener noreferrer"
        target="_blank"
      >
        Storybook tutorials
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Task Archived 1`] = `
<div
  className="list-item TASK_ARCHIVED"
>
  <label
    aria-label="archiveTask-1"
    className="checkbox"
    htmlFor="checked"
  >
    <input
      checked={true}
      disabled={true}
      id="archiveTask-1"
      name="checked"
      type="checkbox"
    />
    <span
      className="checkbox-custom"
      onClick={[Function]}
    />
  </label>
  <label
    aria-label="Test Task"
    className="title"
    htmlFor="title"
  >
    <input
      className="text-black"
      name="title"
      placeholder="Input title"
      readOnly={true}
      type="text"
      value="Test Task"
    />
  </label>
</div>
`;

exports[`Storyshots Example/Task Default 1`] = `
<div
  className="list-item TASK_INBOX"
>
  <label
    aria-label="archiveTask-1"
    className="checkbox"
    htmlFor="checked"
  >
    <input
      checked={false}
      disabled={true}
      id="archiveTask-1"
      name="checked"
      type="checkbox"
    />
    <span
      className="checkbox-custom"
      onClick={[Function]}
    />
  </label>
  <label
    aria-label="Test Task"
    className="title"
    htmlFor="title"
  >
    <input
      className="text-black"
      name="title"
      placeholder="Input title"
      readOnly={true}
      type="text"
      value="Test Task"
    />
  </label>
  <button
    aria-label="pinTask-1"
    className="pin-button"
    id="pinTask-1"
    onClick={[Function]}
  >
    <span
      className="icon-star text-black"
    />
  </button>
</div>
`;

exports[`Storyshots Example/Task Pinned 1`] = `
<div
  className="list-item TASK_PINNED"
>
  <label
    aria-label="archiveTask-1"
    className="checkbox"
    htmlFor="checked"
  >
    <input
      checked={false}
      disabled={true}
      id="archiveTask-1"
      name="checked"
      type="checkbox"
    />
    <span
      className="checkbox-custom"
      onClick={[Function]}
    />
  </label>
  <label
    aria-label="Test Task"
    className="title"
    htmlFor="title"
  >
    <input
      className="text-black"
      name="title"
      placeholder="Input title"
      readOnly={true}
      type="text"
      value="Test Task"
    />
  </label>
  <button
    aria-label="pinTask-1"
    className="pin-button"
    id="pinTask-1"
    onClick={[Function]}
  >
    <span
      className="icon-star text-black"
    />
  </button>
</div>
`;

exports[`Storyshots Example/TaskList Default 1`] = `
<div
  className="list-items"
>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-1"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-1"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task1"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task1"
      />
    </label>
    <button
      aria-label="pinTask-1"
      className="pin-button"
      id="pinTask-1"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-2"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-2"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task2"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task2"
      />
    </label>
    <button
      aria-label="pinTask-2"
      className="pin-button"
      id="pinTask-2"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-3"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-3"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task3"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task3"
      />
    </label>
    <button
      aria-label="pinTask-3"
      className="pin-button"
      id="pinTask-3"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-4"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-4"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task4"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task4"
      />
    </label>
    <button
      aria-label="pinTask-4"
      className="pin-button"
      id="pinTask-4"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-5"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-5"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task5"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task5"
      />
    </label>
    <button
      aria-label="pinTask-5"
      className="pin-button"
      id="pinTask-5"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-6"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-6"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task6"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task6"
      />
    </label>
    <button
      aria-label="pinTask-6"
      className="pin-button"
      id="pinTask-6"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-7"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-7"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task7"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task7"
      />
    </label>
    <button
      aria-label="pinTask-7"
      className="pin-button"
      id="pinTask-7"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
</div>
`;

exports[`Storyshots Example/TaskList Default With Interaction 1`] = `
<div
  className="list-items"
>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-1"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-1"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Something"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Something"
      />
    </label>
    <button
      aria-label="pinTask-1"
      className="pin-button"
      id="pinTask-1"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-2"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-2"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Something more"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Something more"
      />
    </label>
    <button
      aria-label="pinTask-2"
      className="pin-button"
      id="pinTask-2"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-3"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-3"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Something else"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Something else"
      />
    </label>
    <button
      aria-label="pinTask-3"
      className="pin-button"
      id="pinTask-3"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-4"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-4"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Something again"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Something again"
      />
    </label>
    <button
      aria-label="pinTask-4"
      className="pin-button"
      id="pinTask-4"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
</div>
`;

exports[`Storyshots Example/TaskList Empty 1`] = `
<div
  className="list-items"
  data-testid="empty"
>
  <div
    className="wrapper-message"
  >
    <span
      className="icon-check"
    />
    <div
      className="title-message"
    >
      You have no tasks
    </div>
    <div
      className="subtitle-message"
    >
      Sit back and relax
    </div>
  </div>
</div>
`;

exports[`Storyshots Example/TaskList Loading 1`] = `
<div
  className="list-items"
  data-testid="loading"
>
  <div
    className="loading-item"
  >
    <span
      className="glow-checkbox"
    />
    <span
      className="glow-text"
    >
      <span>
        Loading
      </span>
       
      <span>
        cool
      </span>
       
      <span>
        state
      </span>
    </span>
  </div>
  <div
    className="loading-item"
  >
    <span
      className="glow-checkbox"
    />
    <span
      className="glow-text"
    >
      <span>
        Loading
      </span>
       
      <span>
        cool
      </span>
       
      <span>
        state
      </span>
    </span>
  </div>
  <div
    className="loading-item"
  >
    <span
      className="glow-checkbox"
    />
    <span
      className="glow-text"
    >
      <span>
        Loading
      </span>
       
      <span>
        cool
      </span>
       
      <span>
        state
      </span>
    </span>
  </div>
  <div
    className="loading-item"
  >
    <span
      className="glow-checkbox"
    />
    <span
      className="glow-text"
    >
      <span>
        Loading
      </span>
       
      <span>
        cool
      </span>
       
      <span>
        state
      </span>
    </span>
  </div>
  <div
    className="loading-item"
  >
    <span
      className="glow-checkbox"
    />
    <span
      className="glow-text"
    >
      <span>
        Loading
      </span>
       
      <span>
        cool
      </span>
       
      <span>
        state
      </span>
    </span>
  </div>
  <div
    className="loading-item"
  >
    <span
      className="glow-checkbox"
    />
    <span
      className="glow-text"
    >
      <span>
        Loading
      </span>
       
      <span>
        cool
      </span>
       
      <span>
        state
      </span>
    </span>
  </div>
</div>
`;

exports[`Storyshots Example/TaskList Tasks With Pinned 1`] = `
<div
  className="list-items"
>
  <div
    className="list-item TASK_PINNED"
  >
    <label
      aria-label="archiveTask-4"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-4"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task4"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task4"
      />
    </label>
    <button
      aria-label="pinTask-4"
      className="pin-button"
      id="pinTask-4"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_PINNED"
  >
    <label
      aria-label="archiveTask-5"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-5"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task5"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task5"
      />
    </label>
    <button
      aria-label="pinTask-5"
      className="pin-button"
      id="pinTask-5"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_PINNED"
  >
    <label
      aria-label="archiveTask-6"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-6"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task6"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task6"
      />
    </label>
    <button
      aria-label="pinTask-6"
      className="pin-button"
      id="pinTask-6"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_PINNED"
  >
    <label
      aria-label="archiveTask-7"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-7"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task7"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task7"
      />
    </label>
    <button
      aria-label="pinTask-7"
      className="pin-button"
      id="pinTask-7"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-1"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-1"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task1"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task1"
      />
    </label>
    <button
      aria-label="pinTask-1"
      className="pin-button"
      id="pinTask-1"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-2"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-2"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task2"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task2"
      />
    </label>
    <button
      aria-label="pinTask-2"
      className="pin-button"
      id="pinTask-2"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
  <div
    className="list-item TASK_INBOX"
  >
    <label
      aria-label="archiveTask-3"
      className="checkbox"
      htmlFor="checked"
    >
      <input
        checked={false}
        disabled={true}
        id="archiveTask-3"
        name="checked"
        type="checkbox"
      />
      <span
        className="checkbox-custom"
        onClick={[Function]}
      />
    </label>
    <label
      aria-label="Task3"
      className="title"
      htmlFor="title"
    >
      <input
        className="text-black"
        name="title"
        placeholder="Input title"
        readOnly={true}
        type="text"
        value="Task3"
      />
    </label>
    <button
      aria-label="pinTask-3"
      className="pin-button"
      id="pinTask-3"
      onClick={[Function]}
    >
      <span
        className="icon-star"
      />
    </button>
  </div>
</div>
`;

exports[`Storyshots Task Archived 1`] = `
<div
  className="list-item TASK_ARCHIVED"
>
  <label
    aria-label="archiveTask-1"
    className="checkbox"
    htmlFor="checked"
  >
    <input
      checked={true}
      disabled={true}
      id="archiveTask-1"
      name="checked"
      type="checkbox"
    />
    <span
      className="checkbox-custom"
      onClick={[Function]}
    />
  </label>
  <label
    aria-label="Test Task"
    className="title"
    htmlFor="title"
  >
    <input
      className="text-black"
      name="title"
      placeholder="Input title"
      readOnly={true}
      type="text"
      value="Test Task"
    />
  </label>
</div>
`;

exports[`Storyshots Task Default 1`] = `
<div
  className="list-item TASK_INBOX"
>
  <label
    aria-label="archiveTask-1"
    className="checkbox"
    htmlFor="checked"
  >
    <input
      checked={false}
      disabled={true}
      id="archiveTask-1"
      name="checked"
      type="checkbox"
    />
    <span
      className="checkbox-custom"
      onClick={[Function]}
    />
  </label>
  <label
    aria-label="Test Task"
    className="title"
    htmlFor="title"
  >
    <input
      className="text-black"
      name="title"
      placeholder="Input title"
      readOnly={true}
      type="text"
      value="Test Task"
    />
  </label>
  <button
    aria-label="pinTask-1"
    className="pin-button"
    id="pinTask-1"
    onClick={[Function]}
  >
    <span
      className="icon-star text-black"
    />
  </button>
</div>
`;

exports[`Storyshots Task Pinned 1`] = `
<div
  className="list-item TASK_PINNED"
>
  <label
    aria-label="archiveTask-1"
    className="checkbox"
    htmlFor="checked"
  >
    <input
      checked={false}
      disabled={true}
      id="archiveTask-1"
      name="checked"
      type="checkbox"
    />
    <span
      className="checkbox-custom"
      onClick={[Function]}
    />
  </label>
  <label
    aria-label="Test Task"
    className="title"
    htmlFor="title"
  >
    <input
      className="text-black"
      name="title"
      placeholder="Input title"
      readOnly={true}
      type="text"
      value="Test Task"
    />
  </label>
  <button
    aria-label="pinTask-1"
    className="pin-button"
    id="pinTask-1"
    onClick={[Function]}
  >
    <span
      className="icon-star text-black"
    />
  </button>
</div>
`;
